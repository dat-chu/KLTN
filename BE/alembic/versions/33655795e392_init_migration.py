"""Init migration

Revision ID: 33655795e392
Revises: 
Create Date: 2025-05-03 23:26:16.303964

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '33655795e392'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_positions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_positions_id'), 'job_positions', ['id'], unique=False)
    op.create_table('programming_languages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('cvs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_descriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('job_position_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('experience_year', sa.Integer(), nullable=True),
    sa.Column('level', sa.String(length=50), nullable=True),
    sa.Column('working_type', sa.String(length=50), nullable=True),
    sa.Column('contract_type', sa.String(length=50), nullable=True),
    sa.Column('salary_min', sa.Float(), nullable=True),
    sa.Column('salary_max', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['job_position_id'], ['job_positions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidate_feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('job_description_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['job_description_id'], ['job_descriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cv_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('job_description_id', sa.Integer(), nullable=True),
    sa.Column('cv_id', sa.Integer(), nullable=True),
    sa.Column('applied_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], ),
    sa.ForeignKeyConstraint(['job_description_id'], ['job_descriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorite_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('job_description_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['job_description_id'], ['job_descriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_description_programming_languages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_description_id', sa.Integer(), nullable=True),
    sa.Column('programming_language_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['job_description_id'], ['job_descriptions.id'], ),
    sa.ForeignKeyConstraint(['programming_language_id'], ['programming_languages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job_description_programming_languages')
    op.drop_table('favorite_jobs')
    op.drop_table('cv_applications')
    op.drop_table('candidate_feedbacks')
    op.drop_table('job_descriptions')
    op.drop_table('cvs')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_table('programming_languages')
    op.drop_index(op.f('ix_job_positions_id'), table_name='job_positions')
    op.drop_table('job_positions')
    # ### end Alembic commands ###
